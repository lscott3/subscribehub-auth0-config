name: Deploy Auth0 Configuration

on:
  push:
    branches:
      - main  # For production
      - staging  # For staging
      - develop  # For development
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Determine environment
        id: determine-env
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "ENVIRONMENT=prod" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/staging" ]; then
            echo "ENVIRONMENT=staging" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/develop" ]; then
            echo "ENVIRONMENT=dev" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=dev" >> $GITHUB_ENV
          fi

      - name: Create .env file
        run: |
          echo "AUTH0_CLIENT_ID=${{ secrets[format('{0}_CLIENT_ID', env.ENVIRONMENT)] }}" >> .env
          echo "AUTH0_CLIENT_SECRET=${{ secrets[format('{0}_CLIENT_SECRET', env.ENVIRONMENT)] }}" >> .env
          echo "EXTENSION_ID=${{ secrets.EXTENSION_ID }}" >> .env
          echo "DOMAIN_NAME=${{ secrets[format('{0}_DOMAIN_NAME', env.ENVIRONMENT)] }}" >> .env
          echo "BACKEND_API_KEY=${{ secrets.BACKEND_API_KEY }}" >> .env

      - name: Process template files
        run: |
          # Create a simple script to replace placeholders
          cat > replace-placeholders.js << 'EOF'
          const fs = require('fs');
          const path = require('path');
          require('dotenv').config();

          // Get all YAML files recursively
          function getAllFiles(dirPath, arrayOfFiles = []) {
            const files = fs.readdirSync(dirPath);

            files.forEach(file => {
              const filePath = path.join(dirPath, file);
              if (fs.statSync(filePath).isDirectory()) {
                arrayOfFiles = getAllFiles(filePath, arrayOfFiles);
              } else if (filePath.endsWith('.yaml') || filePath.endsWith('.yml')) {
                arrayOfFiles.push(filePath);
              }
            });

            return arrayOfFiles;
          }

          // Replace placeholders in all YAML files
          const allYamlFiles = getAllFiles('./');

          allYamlFiles.forEach(file => {
            let content = fs.readFileSync(file, 'utf8');

            // Replace all placeholders in format {{KEY}} with corresponding env variables
            content = content.replace(/\{\{([A-Z_]+)\}\}/g, (match, envVar) => {
              return process.env[envVar] || match;
            });

            fs.writeFileSync(file, content);
            console.log(`Processed: ${file}`);
          });
          EOF

          # Run the placeholder replacement script
          node replace-placeholders.js

      - name: Deploy to Auth0
        run: npm run deploy:${{ env.ENVIRONMENT }}
        env:
          NODE_ENV: ${{ env.ENVIRONMENT }}
